buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id "org.jetbrains.changelog" version "1.3.+"
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mod_version}"
group = 'com.tagnumelite.projecteintegration'
archivesBaseName = "${mod_name}-${mc_version}"

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

//project.logger.info('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    // You must be aware of the Mojang license when using the 'official' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    mappings channel: 'official', version: "${mc_version}"

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                projecteintegration {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                projecteintegration {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'projecteintegration', '--all',
                    '--existing-mod', 'projecte',
                    '--existing', file('src/main/resources').toString(),
                    '--existing', file('src/generated/resources').toString(),
                    '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                projecteintegration {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    flatDir {
        dir 'libs'
    }
    maven {
        name "CurseMaven"
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name "Jitpack"
        url "https://jitpack.io"
        content {
            includeGroup "com.github"
        }
    }
    maven { name "Architectury"; url "https://maven.architectury.dev/" }
    maven { name "Covers1624"; url "https://maven.covers1624.net/" }
    maven { name "BlameJared"; url "https://maven.blamejared.com" }
    maven { name "Progwml6"; url "https://dvs1.progwml6.com/files/maven/" }
    maven { name "ChickenBones"; url "https://chickenbones.net/maven/" }
    maven { name "TheIllusiveC4"; url "https://maven.theillusivec4.top/" }
    maven { name "TTerrag"; url "https://maven.tterrag.com/" }
    maven { name "GeckoMaven"; url "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/" }
    maven { name "Modmaven"; url "https://modmaven.dev/" }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    // ======================= [ Required Mods ] =======================
    implementation fg.deobf("curse.maven:projecte-226410:${version_projecte}")

    // ======================= [ Runtime Mods ] =======================
    runtimeOnly fg.deobf("me.shedaniel:architectury-forge:${version_architectury}")
    runtimeOnly fg.deobf("curse.maven:alib-293426:${version_alib}")
    runtimeOnly fg.deobf("curse.maven:brandons-core-231382:${version_brandonscore}")
    runtimeOnly fg.deobf("curse.maven:chemlib-340666:${version_chemlib}")
    runtimeOnly fg.deobf("curse.maven:citadel-331936:${version_citadel}")
    runtimeOnly fg.deobf("codechicken:CodeChickenLib:${version_codechickenlib}:universal")
    runtimeOnly fg.deobf("curse.maven:cucumber-272335:${version_cucumber}")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${version_curios}")
    runtimeOnly fg.deobf("curse.maven:emendatus-enigmatica-399630:${version_emendatus_enigmatica}")
    runtimeOnly fg.deobf("com.jozufozu.flywheel:Flywheel:${version_flywheel}")
    runtimeOnly fg.deobf("software.bernie.geckolib:geckolib-forge-1.16.5:${version_geckolib}")
    runtimeOnly fg.deobf("mezz.jei:jei-${version_jei}")
    runtimeOnly fg.deobf("curse.maven:myrtrees-546151:${version_myrtrees}")
    runtimeOnly fg.deobf("curse.maven:obfuscate-289380:${version_obfuscate}")
    runtimeOnly fg.deobf("curse.maven:observerlib-316833:${version_observerlib}")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${version_patchouli}")

    // ======================= [ Optional Mods ] =======================
    implementation fg.deobf("curse.maven:alchemistry-293425:${version_alchemistry}")
    implementation fg.deobf("appeng:appliedenergistics2:${version_appliedenergistics}")
    implementation fg.deobf("curse.maven:astralsorcery-241721:${version_astralsorcery}")
    implementation fg.deobf("curse.maven:blood-magic-224791:${version_bloodmagic}")
    implementation fg.deobf("vazkii.botania:Botania:${version_botania}")
    implementation fg.deobf("curse.maven:chipped-456956:${version_chipped}")
    implementation fg.deobf("curse.maven:compactcrafting-429735:${version_compactcrafting}")
    implementation fg.deobf("curse.maven:corail-woodcutter-331983:${version_corail_woodcutter}")
    implementation fg.deobf("curse.maven:create-328085:${version_create}")
    implementation fg.deobf("curse.maven:draconic-evolution-223565:${version_draconicevolution}")
    //implementation fg.deobf("curse.maven:avaritia-endless-624491:${version_avaritia_endless}")
    implementation fg.deobf("blank:Endless-1.16.5:1.4.0")
    //implementation fg.deobf("curse.maven:exnihilo-sequel-400012:${version_exnihilo_sequel}")
    implementation fg.deobf("blank:exnihilosequentia-1.16-20220530:185402")
    implementation fg.deobf("curse.maven:extended-crafting-268387:${version_extendedcrafting}")
    implementation fg.deobf("curse.maven:farmers-delight-398521:${version_farmersdelight}")
    implementation fg.deobf("curse.maven:farming-for-blockheads-261924:${version_farmingforblockheads}")
    implementation fg.deobf("curse.maven:ftb-industrial-contraptions-539097:${version_ftb_industrial_contraptions}")
    compileOnly fg.deobf("curse.maven:ice-and-fire-264231:${version_iceandfire}")
    implementation fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${mc_version}-${version_immersiveengineering}")
    implementation fg.deobf("com.buuz135:industrial-foregoing:${version_industrialforegoing}")
    implementation fg.deobf("slimeknights.mantle:Mantle:${version_mantle}")
    implementation fg.deobf("curse.maven:mana-and-artifice-406360:${version_manaandartifice}")
    implementation fg.deobf("curse.maven:mrcrayfishs-vehicle-mod-286660:${version_mrcrayfishs_vehicle_mod}")
    implementation fg.deobf("curse.maven:mystical-agriculture-246640:${version_mysticalagriculture}")
    implementation fg.deobf("curse.maven:pams-harvestcraft-2-food-core-372534:${version_pamsharvestcraftfoodcore}")
    implementation fg.deobf("curse.maven:pams-harvestcraft-2-crops-361385:${version_pamsharvestcraftcrops}")
    implementation fg.deobf("curse.maven:pams-harvestcraft-2-food-extended-402231:${version_pamsharvestcraftfoodextended}")
    implementation fg.deobf("curse.maven:pneumaticcraft-repressurized-281849:${version_pneumaticcraft}")
    implementation fg.deobf("vazkii.psi:Psi:${version_psi}")
    implementation fg.deobf("slimeknights.tconstruct:TConstruct:${version_tinkers}")
    implementation fg.deobf("com.hrznstudio:titanium:${version_titanium}")
    implementation fg.deobf("curse.maven:touhou_little_maid-355044:${version_touhou_little_maid}")
    implementation fg.deobf("curse.maven:woot-244049:${version_woot}")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "projecteintegration",
            "Specification-Vendor": "tagnumelite",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${mod_version}",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

javadoc {
    source = [sourceSets.main.allJava]
    // prevent java 8's strict doclint for javadocs from failing builds
    options.addStringOption('Xdoclint:none', '-quiet')
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveBaseName.set(project.archivesBaseName)
    archiveVersion.set("${project.version}")
    archiveClassifier.set('sources')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    archiveClassifier.set('javadoc')
}

artifacts {
    archives jar, sourcesJar, javadocJar
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = mod_name
            group = "com.tagnumelite"
            artifacts {
                artifact jar
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
        // GitHub Packages
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/tagnumelite/projecte-integration"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

changelog {
    version = "${project.version}"
    path = "${project.projectDir}/CHANGELOG.md"
    header = "[${-> version.get()}]"
    itemPrefix = "-"
    keepUnreleasedSection = true
    unreleasedTerm = "[Unreleased]"
    groups = ["Added", "Changed", "Deprecated", "Removed", "Fixed", "Security"]
}

if (System.getenv().CURSEFORGE_API_KEY != null) {
    curseforge {
        apiKey = System.getenv().CURSEFORGE_API_KEY
        project {
            id = "${cf_project}"
            addGameVersion "${mc_version}"
            changelog = "${project.changelog.get(mod_version).toString()}"
            changelogType = 'markdown'
            releaseType = "${release_type}"

            mainArtifact(jar) {
                relations {
                    requiredDependency 'projecte'

                    optionalDependency 'alchemistry'
                    optionalDependency 'applied-energistics-2'
                    optionalDependency 'astral-sorcery'
                    optionalDependency 'avaritia-endless'
                    optionalDependency 'blood-magic'
                    optionalDependency 'botania'
                    optionalDependency 'chipped'
                    optionalDependency 'compact-crafting'
                    optionalDependency 'corail-woodcutter'
                    optionalDependency 'create'
                    optionalDependency 'ex-nihilo-sequentia'
                    optionalDependency 'extended-crafting'
                    optionalDependency 'ice-and-fire-dragons'
                    optionalDependency 'farmers-delight'
                    optionalDependency 'farming-for-blockheads'
                    optionalDependency 'ftb-industrial-contraptions-forge'
                    optionalDependency 'immersive-engineering'
                    optionalDependency 'industrial-foregoing'
                    optionalDependency 'mana-and-artifice'
                    optionalDependency 'mrcrayfishs-vehicle-mod'
                    optionalDependency 'mystical-agriculture'
                    optionalDependency 'pams-harvestcraft-2-food-core'
                    optionalDependency 'pams-harvestcraft-2-crops'
                    optionalDependency 'pams-harvestcraft-2-food-extended'
                    optionalDependency 'pneumaticcraft-repressurized'
                    optionalDependency 'psi'
                    optionalDependency 'tinkers-construct'
                    optionalDependency 'touhou-little-maid'
                    optionalDependency 'woot'
                }
            }
        }
    }
}
